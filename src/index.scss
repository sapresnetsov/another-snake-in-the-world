@font-face {
  font-family: 'Floyd';
  src: local('Floyd'), url(./assets/fonts/floyd.TTF) format('truetype');
}

@font-face {
  font-family: 'Righetous';
  src: local('Righetous'), url(./assets/fonts/righteous.woff) format('woff');
}

@use "sass:map";
%flex-column {
  display: flex;
  flex-direction: column;
}

$header_color: red;

$breakpoints: (
  "320px": 20rem,
  "375px": 23.4375rem,
  "480px": 30rem,
  "568px": 35.5rem,
  "m": 25rem,
  "xl": 30rem,
);
@function index-to-key($index) {
  $keys: map-keys($breakpoints);

  @return nth($keys, $index);
}

@mixin breakpoints($screen-size, $screen-orientation) {
  $media-query: "screen and";
  $previous-screen-size: 0;
  @if map-has-key($breakpoints, $screen-size) {
    $screen-size-index: 0;
    $i: 1;
    @each $key, $value in $breakpoints {
      @if $key == $screen-size {
        $screen-size-index: $i; 
      }
      $i: $i + 1;
    }
    $screen-size: map-get($breakpoints, $screen-size);
    $previous-screen-size: $screen-size;
    @if $screen-size-index == 1 {
      $media-query: "#{$media-query} (max-device-width: #{$screen-size}) and (orientation: #{$screen-orientation})";
    }
    @else {
      $screen-size-index: $screen-size-index - 1;
      $previous-screen-size: map-get($breakpoints, nth(map-keys($breakpoints), $screen-size-index)) + 0.0625rem;
      $media-query: "#{$media-query} (min-device-width: #{$previous-screen-size}) " +
                    "and (max-device-width: #{$screen-size}) and (orientation: #{$screen-orientation})";
    }    
  } 
  @else {
    $media-query: "#{$media-query} (orientation: #{$screen-orientation})";
  }  
  
  @media #{$media-query} {   
    min-width: $previous-screen-size; 
    @content;
  }
}

body {
  margin: 0;
  font-family: 'Floyd';  
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #D1D1D1;  
}

*, *:before, *:after {
  box-sizing: border-box;
}

button {
  padding: 0;
  margin: 0;
  background: none;
  border: none;
}

.layout {
  @extend %flex-column;

  width: 100%;
  min-width: 750px;
  min-height: 100vh;  
  max-width: 100vw;
  max-height: 100vh; 

  overflow: hidden;
 
  background-image: url('./assets/imgs/background.jpg');

  @each $size, $value in $breakpoints {
    @include breakpoints($size, portrait) {
      // min-width: $value;
    };
    @include breakpoints($size, landscape) {
      flex-direction: row;
      // min-width: $value;
    };
  }  
  
  // @include breakpoints("375px", portrait) {
  //   min-width: 20rem;
  // };
  
}

main {
  @extend %flex-column;
  align-items: center;  
  flex-grow: 1;
  width: 100%;  
}
.control_container {
  @extend %flex-column;
  justify-content: space-around;
  flex-grow: 1;
  width: map-get($breakpoints, "xl");
  max-width: 100%;
  
  padding: 0 1rem;
}
.scores_container {
  display: flex;
  justify-content: space-between;  

  >div {
    @extend %flex-column;
    justify-content: space-between;
    text-align: center;
  }
}

.game_field {
  width: map-get($breakpoints, "xl");
  height: map-get($breakpoints, "xl");

  border-radius: .625rem;

  background-color: #D1D1D1;
}

@media only screen and (max-device-width: 23.4375rem) and (orientation: portrait){
  // .layout {
  //   min-width: 20rem;       
  // }
  header {
    grid-template-columns: 20% 80% !important;
    h1 {
      font-size: 1.3rem !important;
    }    
  }
  main {
    justify-content: unset;
  }
  .game_field {
    width: 19.375rem;
    height: 19.375rem;
  }  
}

@media only screen and (max-device-width: 640px) and (orientation: landscape) {
  // .layout {    
  //   flex-direction: row;
  //   min-width: 500px;
  // }
  header {
    flex-basis: 10% !important;
    display: block !important;   
    margin: .5rem;
    h1 {
      display: none;
    }    
  }
  main {
    flex-direction: row;
    justify-content: unset;
  }  
  .game_field {
    width: 19.375rem;
    height: 19.375rem;
  }  
  .control_container {    
    width: auto;
    height: 100%;
    margin: 0 auto;    
  }
  .scores_container {
    flex-direction: column;    
    width: 100%;    
  }
  .container {
    flex-direction: column;
    padding: 0;

    div:first-child {
      margin-bottom: 1.5rem;
    } 
  }
}

.container {
  display: flex;
  justify-content: space-between;
  align-items: center;

  width: 100%;
  max-width: 31.75rem;

  button {
      svg {
          fill: #444;
          &:hover {
              fill: #666;
          }
      }
  }
}

.left_container {
  display: flex;  
  justify-content: space-between;

  flex: 0 0 20%;

  button:first-child {
    margin-right: 1.5rem;
  }
}

.right_container {
  display: grid;
  grid-template-rows: 2rem 2rem 2rem;
  grid-template-columns: 2rem 2rem 2rem;
  grid-gap: .3125rem;

  svg {
      width: 2rem;
      height: 2rem;
  }
}
 
.reset_icon {
  animation: rotation .5s 1 linear;

  @keyframes rotation {
      0% {transform: rotate(0deg);}
      100% {transform: rotate(360deg);}
  }
}

// .control_icon {
//   width: 30px;
//   height: 30px;
// }